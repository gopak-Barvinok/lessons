{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "name": "callme",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_addrs",
          "type": "address[]"
        }
      ],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "message",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        }
      ],
      "name": "pay",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x84898da283817066fd982682ecb20267fad916c6393b193975e47cdfa3c5bd30",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "593333",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x48c204c59065c163623e59a5623a54c80574b9bdefb200498e349a8900cd3886",
    "transactionHash": "0x84898da283817066fd982682ecb20267fad916c6393b193975e47cdfa3c5bd30",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "593333",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "1b07256da1730756aca1f4f2984ffce8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"callme\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addrs\",\"type\":\"address[]\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"message\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Demo.sol\":\"Demo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Demo.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\n// Uncomment this line to use console.log\\n// import \\\"hardhat/console.sol\\\";\\n\\ncontract Demo {\\n    string public message;\\n\\n    function pay(string calldata _message) external payable {\\n        message = _message;\\n    }\\n\\n    function callme() external view returns(address) {\\n        return msg.sender;\\n    }\\n\\n    function distribute(address[] calldata _addrs) external {\\n        uint count = _addrs.length;\\n        uint sum = address(this).balance / count;\\n\\n        for(uint i = 0; i < count; i++) {\\n            (bool success,) = _addrs[i].call{value: sum}(\\\"\\\");\\n            require(success);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa40a41913e614c12384691e0a0332c88440f3c8bc23ecb653d313212ff9a7b3a\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506109ce806100206000396000f3fe60806040526004361061003f5760003560e01c80632b66d72e146100445780636138889b14610060578063a3c8e39314610089578063e21f37ce146100b4575b600080fd5b61005e600480360381019061005991906102d5565b6100df565b005b34801561006c57600080fd5b5061008760048036038101906100829190610378565b6100f5565b005b34801561009557600080fd5b5061009e6101d0565b6040516100ab9190610406565b60405180910390f35b3480156100c057600080fd5b506100c96101d8565b6040516100d691906104b1565b60405180910390f35b8181600091826100f0929190610723565b505050565b60008282905090506000814761010b9190610851565b905060005b828110156101c957600085858381811061012d5761012c610882565b5b905060200201602081019061014291906108dd565b73ffffffffffffffffffffffffffffffffffffffff16836040516101659061093b565b60006040518083038185875af1925050503d80600081146101a2576040519150601f19603f3d011682016040523d82523d6000602084013e6101a7565b606091505b50509050806101b557600080fd5b5080806101c190610950565b915050610110565b5050505050565b600033905090565b600080546101e59061053c565b80601f01602080910402602001604051908101604052809291908181526020018280546102119061053c565b801561025e5780601f106102335761010080835404028352916020019161025e565b820191906000526020600020905b81548152906001019060200180831161024157829003601f168201915b505050505081565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261029557610294610270565b5b8235905067ffffffffffffffff8111156102b2576102b1610275565b5b6020830191508360018202830111156102ce576102cd61027a565b5b9250929050565b600080602083850312156102ec576102eb610266565b5b600083013567ffffffffffffffff81111561030a5761030961026b565b5b6103168582860161027f565b92509250509250929050565b60008083601f84011261033857610337610270565b5b8235905067ffffffffffffffff81111561035557610354610275565b5b6020830191508360208202830111156103715761037061027a565b5b9250929050565b6000806020838503121561038f5761038e610266565b5b600083013567ffffffffffffffff8111156103ad576103ac61026b565b5b6103b985828601610322565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103f0826103c5565b9050919050565b610400816103e5565b82525050565b600060208201905061041b60008301846103f7565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561045b578082015181840152602081019050610440565b60008484015250505050565b6000601f19601f8301169050919050565b600061048382610421565b61048d818561042c565b935061049d81856020860161043d565b6104a681610467565b840191505092915050565b600060208201905081810360008301526104cb8184610478565b905092915050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061055457607f821691505b6020821081036105675761056661050d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026105cf7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610592565b6105d98683610592565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061062061061b610616846105f1565b6105fb565b6105f1565b9050919050565b6000819050919050565b61063a83610605565b61064e61064682610627565b84845461059f565b825550505050565b600090565b610663610656565b61066e818484610631565b505050565b5b818110156106925761068760008261065b565b600181019050610674565b5050565b601f8211156106d7576106a88161056d565b6106b184610582565b810160208510156106c0578190505b6106d46106cc85610582565b830182610673565b50505b505050565b600082821c905092915050565b60006106fa600019846008026106dc565b1980831691505092915050565b600061071383836106e9565b9150826002028217905092915050565b61072d83836104d3565b67ffffffffffffffff811115610746576107456104de565b5b610750825461053c565b61075b828285610696565b6000601f83116001811461078a5760008415610778578287013590505b6107828582610707565b8655506107ea565b601f1984166107988661056d565b60005b828110156107c05784890135825560018201915060208501945060208101905061079b565b868310156107dd57848901356107d9601f8916826106e9565b8355505b6001600288020188555050505b50505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061085c826105f1565b9150610867836105f1565b925082610877576108766107f3565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6108ba816103e5565b81146108c557600080fd5b50565b6000813590506108d7816108b1565b92915050565b6000602082840312156108f3576108f2610266565b5b6000610901848285016108c8565b91505092915050565b600081905092915050565b50565b600061092560008361090a565b915061093082610915565b600082019050919050565b600061094682610918565b9150819050919050565b600061095b826105f1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361098d5761098c610822565b5b60018201905091905056fea26469706673582212202feea8bc3021c03db77ccfa1ac0567903f705d24a3b55796ddca95535b75134964736f6c63430008130033",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c80632b66d72e146100445780636138889b14610060578063a3c8e39314610089578063e21f37ce146100b4575b600080fd5b61005e600480360381019061005991906102d5565b6100df565b005b34801561006c57600080fd5b5061008760048036038101906100829190610378565b6100f5565b005b34801561009557600080fd5b5061009e6101d0565b6040516100ab9190610406565b60405180910390f35b3480156100c057600080fd5b506100c96101d8565b6040516100d691906104b1565b60405180910390f35b8181600091826100f0929190610723565b505050565b60008282905090506000814761010b9190610851565b905060005b828110156101c957600085858381811061012d5761012c610882565b5b905060200201602081019061014291906108dd565b73ffffffffffffffffffffffffffffffffffffffff16836040516101659061093b565b60006040518083038185875af1925050503d80600081146101a2576040519150601f19603f3d011682016040523d82523d6000602084013e6101a7565b606091505b50509050806101b557600080fd5b5080806101c190610950565b915050610110565b5050505050565b600033905090565b600080546101e59061053c565b80601f01602080910402602001604051908101604052809291908181526020018280546102119061053c565b801561025e5780601f106102335761010080835404028352916020019161025e565b820191906000526020600020905b81548152906001019060200180831161024157829003601f168201915b505050505081565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261029557610294610270565b5b8235905067ffffffffffffffff8111156102b2576102b1610275565b5b6020830191508360018202830111156102ce576102cd61027a565b5b9250929050565b600080602083850312156102ec576102eb610266565b5b600083013567ffffffffffffffff81111561030a5761030961026b565b5b6103168582860161027f565b92509250509250929050565b60008083601f84011261033857610337610270565b5b8235905067ffffffffffffffff81111561035557610354610275565b5b6020830191508360208202830111156103715761037061027a565b5b9250929050565b6000806020838503121561038f5761038e610266565b5b600083013567ffffffffffffffff8111156103ad576103ac61026b565b5b6103b985828601610322565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103f0826103c5565b9050919050565b610400816103e5565b82525050565b600060208201905061041b60008301846103f7565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561045b578082015181840152602081019050610440565b60008484015250505050565b6000601f19601f8301169050919050565b600061048382610421565b61048d818561042c565b935061049d81856020860161043d565b6104a681610467565b840191505092915050565b600060208201905081810360008301526104cb8184610478565b905092915050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061055457607f821691505b6020821081036105675761056661050d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026105cf7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610592565b6105d98683610592565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061062061061b610616846105f1565b6105fb565b6105f1565b9050919050565b6000819050919050565b61063a83610605565b61064e61064682610627565b84845461059f565b825550505050565b600090565b610663610656565b61066e818484610631565b505050565b5b818110156106925761068760008261065b565b600181019050610674565b5050565b601f8211156106d7576106a88161056d565b6106b184610582565b810160208510156106c0578190505b6106d46106cc85610582565b830182610673565b50505b505050565b600082821c905092915050565b60006106fa600019846008026106dc565b1980831691505092915050565b600061071383836106e9565b9150826002028217905092915050565b61072d83836104d3565b67ffffffffffffffff811115610746576107456104de565b5b610750825461053c565b61075b828285610696565b6000601f83116001811461078a5760008415610778578287013590505b6107828582610707565b8655506107ea565b601f1984166107988661056d565b60005b828110156107c05784890135825560018201915060208501945060208101905061079b565b868310156107dd57848901356107d9601f8916826106e9565b8355505b6001600288020188555050505b50505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061085c826105f1565b9150610867836105f1565b925082610877576108766107f3565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6108ba816103e5565b81146108c557600080fd5b50565b6000813590506108d7816108b1565b92915050565b6000602082840312156108f3576108f2610266565b5b6000610901848285016108c8565b91505092915050565b600081905092915050565b50565b600061092560008361090a565b915061093082610915565b600082019050919050565b600061094682610918565b9150819050919050565b600061095b826105f1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361098d5761098c610822565b5b60018201905091905056fea26469706673582212202feea8bc3021c03db77ccfa1ac0567903f705d24a3b55796ddca95535b75134964736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/Demo.sol:Demo",
        "label": "message",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}